>>SOURCE FREE
IDENTIFICATION DIVISION.
PROGRAM-ID. View-Profile.
AUTHOR. Jacob.
DATE-WRITTEN. 09/12/2025.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT PROFILE-FILE ASSIGN TO 'profiles.txt'
        ORGANIZATION IS LINE SEQUENTIAL
        FILE STATUS IS WS-FILE-STATUS.
    SELECT OUTPUT-FILE ASSIGN TO "InCollege-Output.txt"
        ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.

FILE SECTION.
FD PROFILE-FILE.
01 PROFILE-RECORD       PIC X(250).

FD OUTPUT-FILE.
01 OUTPUT-RECORD        PIC X(350).

WORKING-STORAGE SECTION.
01 WS-FILE-STATUS       PIC XX.
01 WS-EOF-FLAG          PIC X VALUE 'N'.
01 I                    PIC 9.
01 J                    PIC 9.
01 WS-MESSAGE           PIC X(80).
01 WS-TEMP-ONE          PIC X(80).
01 WS-TEMP-TWO          PIC X(80).
LINKAGE SECTION.
01 LS-USERNAME          PIC X(20).

01 LS-PROFILE-DATA.
   05 LS-FIRST-NAME     PIC X(50).
   05 LS-LAST-NAME      PIC X(50).
   05 LS-UNIVERSITY     PIC X(100).
   05 LS-MAJOR          PIC X(50).
   05 LS-GRAD-YEAR      PIC X(4).
   05 LS-ABOUT-ME       PIC X(200).
   05 LS-EXPERIENCE-TABLE.
      10 LS-EXPERIENCE OCCURS 3 TIMES INDEXED BY EXP-IDX.
         15 LS-EXP-TITLE    PIC X(50).
         15 LS-EXP-COMPANY  PIC X(50).
         15 LS-EXP-DATES    PIC X(50).
         15 LS-EXP-DESC     PIC X(100).
   05 LS-EXP-COUNT      PIC 9.
   05 LS-EDUCATION-TABLE.
      10 LS-EDUCATION OCCURS 3 TIMES INDEXED BY EDU-IDX.
         15 LS-EDU-DEGREE   PIC X(50).
         15 LS-EDU-UNIV     PIC X(50).
         15 LS-EDU-YEARS    PIC X(50).
   05 LS-EDU-COUNT      PIC 9.

01 LS-RETURN-CODE       PIC X.

PROCEDURE DIVISION USING LS-USERNAME LS-PROFILE-DATA LS-RETURN-CODE.

    MOVE 'F' TO LS-RETURN-CODE
    MOVE 'N' TO WS-EOF-FLAG

    *> Trim input username to remove extra spaces or newlines
    MOVE FUNCTION TRIM(LS-USERNAME) TO LS-USERNAME

    OPEN INPUT PROFILE-FILE.
    OPEN EXTEND OUTPUT-FILE.

    IF WS-FILE-STATUS NOT = "00"
        DISPLAY "Error opening profiles file."
        DISPLAY "File Status: " WS-FILE-STATUS
        MOVE 'X' TO LS-RETURN-CODE
        CLOSE PROFILE-FILE
        GOBACK
    END-IF

    PERFORM UNTIL WS-EOF-FLAG = 'Y'
        READ PROFILE-FILE
            AT END
                MOVE 'Y' TO WS-EOF-FLAG
            NOT AT END
                MOVE 'N' TO WS-EOF-FLAG
        END-READ

        IF WS-EOF-FLAG = 'N'
            IF PROFILE-RECORD(1:5) = "USER:"
                IF PROFILE-RECORD(6:) = LS-USERNAME
                    PERFORM PARSE-PROFILE
                    MOVE 'S' TO LS-RETURN-CODE
                    MOVE 'Y' TO WS-EOF-FLAG
                END-IF
            END-IF
        END-IF
    END-PERFORM

    IF LS-RETURN-CODE = 'S'
        PERFORM PROFILE-DISPLAY
    END-IF

    CLOSE PROFILE-FILE
    CLOSE OUTPUT-FILE
    GOBACK.

PROFILE-DISPLAY.
    MOVE "---Your Profile---" TO WS-MESSAGE
    DISPLAY WS-MESSAGE
    MOVE WS-MESSAGE TO OUTPUT-RECORD
    WRITE OUTPUT-RECORD
    INITIALIZE WS-MESSAGE
    STRING "Name: " FUNCTION TRIM(LS-FIRST-NAME) " " FUNCTION TRIM(LS-LAST-NAME)
       INTO WS-MESSAGE
    DISPLAY WS-MESSAGE
    MOVE WS-MESSAGE TO OUTPUT-RECORD
    WRITE OUTPUT-RECORD
    INITIALIZE WS-MESSAGE
    STRING "University: " LS-UNIVERSITY
       INTO WS-MESSAGE
    DISPLAY WS-MESSAGE
    MOVE WS-MESSAGE TO OUTPUT-RECORD
    WRITE OUTPUT-RECORD
    INITIALIZE WS-MESSAGE
    STRING "Major: " LS-MAJOR
       INTO WS-MESSAGE
    DISPLAY WS-MESSAGE
    MOVE WS-MESSAGE TO OUTPUT-RECORD
    WRITE OUTPUT-RECORD
    INITIALIZE WS-MESSAGE
    STRING "Graduation Year: " LS-GRAD-YEAR
       INTO WS-MESSAGE
    DISPLAY WS-MESSAGE
    MOVE WS-MESSAGE TO OUTPUT-RECORD
    WRITE OUTPUT-RECORD
    INITIALIZE WS-MESSAGE
    STRING "About Me: " LS-ABOUT-ME
       INTO WS-MESSAGE
    DISPLAY WS-MESSAGE
    MOVE WS-MESSAGE TO OUTPUT-RECORD
    WRITE OUTPUT-RECORD
    INITIALIZE WS-MESSAGE
    MOVE "Experience: " TO WS-MESSAGE
    DISPLAY WS-MESSAGE
    MOVE WS-MESSAGE TO OUTPUT-RECORD
    WRITE OUTPUT-RECORD
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > LS-EXP-COUNT
       INITIALIZE WS-MESSAGE
       STRING " Title: "          LS-EXP-TITLE(I)
           INTO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
       INITIALIZE WS-MESSAGE
       STRING " Company: "        LS-EXP-COMPANY(I)
           INTO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
       INITIALIZE WS-MESSAGE
       STRING " Dates: "          LS-EXP-DATES(I)
           INTO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
       INITIALIZE WS-MESSAGE
       STRING " Description: "    LS-EXP-DESC(I)
           INTO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
       INITIALIZE WS-MESSAGE
       MOVE " " TO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
    END-PERFORM
    INITIALIZE WS-MESSAGE
    MOVE "Education: " TO WS-MESSAGE
    DISPLAY WS-MESSAGE
    MOVE WS-MESSAGE TO OUTPUT-RECORD
    WRITE OUTPUT-RECORD
    PERFORM VARYING J FROM 1 BY 1 UNTIL J > LS-EDU-COUNT
       INITIALIZE WS-MESSAGE
       STRING " Degree: "         LS-EDU-DEGREE(J)
           INTO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
       INITIALIZE WS-MESSAGE
       STRING " University: "     LS-EDU-UNIV(J)
           INTO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
       INITIALIZE WS-MESSAGE
       STRING " Years: "          LS-EDU-YEARS(J)
           INTO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
       INITIALIZE WS-MESSAGE
       MOVE " " TO WS-MESSAGE
       DISPLAY WS-MESSAGE
       MOVE WS-MESSAGE TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
    END-PERFORM.

PARSE-PROFILE.
    MOVE 0 TO LS-EXP-COUNT
    MOVE 0 TO LS-EDU-COUNT

    PERFORM UNTIL PROFILE-RECORD(1:10) = "ENDPROFILE"
        READ PROFILE-FILE INTO PROFILE-RECORD
            AT END
                MOVE 'Y' TO WS-EOF-FLAG
                EXIT PERFORM
        END-READ

        EVALUATE TRUE
            WHEN PROFILE-RECORD(1:5) = "FNAM:"
                MOVE PROFILE-RECORD(6:) TO LS-FIRST-NAME
            WHEN PROFILE-RECORD(1:5) = "LNAM:"
                MOVE PROFILE-RECORD(6:) TO LS-LAST-NAME
            WHEN PROFILE-RECORD(1:5) = "UNIV:"
                MOVE PROFILE-RECORD(6:) TO LS-UNIVERSITY
            WHEN PROFILE-RECORD(1:5) = "MAJR:"
                MOVE PROFILE-RECORD(6:) TO LS-MAJOR
            WHEN PROFILE-RECORD(1:5) = "GRAD:"
                MOVE PROFILE-RECORD(6:) TO LS-GRAD-YEAR
            WHEN PROFILE-RECORD(1:5) = "ABOU:"
                MOVE PROFILE-RECORD(6:) TO LS-ABOUT-ME
            WHEN PROFILE-RECORD(1:6) = "EXP01:" OR
                 PROFILE-RECORD(1:6) = "EXP02:" OR
                 PROFILE-RECORD(1:6) = "EXP03:"
                PERFORM PARSE-EXPERIENCE-LINE
            WHEN PROFILE-RECORD(1:6) = "EDU01:" OR
                 PROFILE-RECORD(1:6) = "EDU02:" OR
                 PROFILE-RECORD(1:6) = "EDU03:"
                PERFORM PARSE-EDUCATION-LINE
        END-EVALUATE
    END-PERFORM.

PARSE-EXPERIENCE-LINE.
    ADD 1 TO LS-EXP-COUNT
    UNSTRING PROFILE-RECORD(7:) DELIMITED BY "~"
        INTO LS-EXP-TITLE(LS-EXP-COUNT)
             LS-EXP-COMPANY(LS-EXP-COUNT)
             LS-EXP-DATES(LS-EXP-COUNT)
             LS-EXP-DESC(LS-EXP-COUNT)
    END-UNSTRING.

PARSE-EDUCATION-LINE.
    ADD 1 TO LS-EDU-COUNT
    UNSTRING PROFILE-RECORD(7:) DELIMITED BY "~"
        INTO LS-EDU-DEGREE(LS-EDU-COUNT)
             LS-EDU-UNIV(LS-EDU-COUNT)
             LS-EDU-YEARS(LS-EDU-COUNT)
    END-UNSTRING.
